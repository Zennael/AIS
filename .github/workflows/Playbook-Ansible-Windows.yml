name: Ansible Playbook Windows 

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ansible'
        required: true
        default: 'Playbook'

jobs:
  configure-windows:
    runs-on: windows-latest
    outputs:
      windows_ip: ${{ steps.set-ip.outputs.ip }}
    steps:
    - name: Configure Static IP on Windows
      id: set-ip
      run: |
        $ip = "192.168.12.100"
        $interface = Get-NetAdapter | Where-Object { $_.Status -eq "Up" } | Select-Object -First 1
        if (-not $interface) {
          Write-Error "No active network interface found. Exiting."
          exit 1
        }
        Write-Host "Configuring Windows IP: $ip on interface $($interface.InterfaceAlias)..."
        New-NetIPAddress -IPAddress $ip -PrefixLength 24 -DefaultGateway 192.168.12.1 -InterfaceAlias $interface.InterfaceAlias
        Write-Host "IP configured successfully on $($interface.InterfaceAlias)."
        echo $ip > windows_ip.txt
        echo "::set-output name=ip::$ip"


    - name: Configure WinRM
      run: |
        Enable-PSRemoting -Force
        Set-Item wsman:\localhost\Service\Auth\Basic -Value $true
        Set-Item wsman:\localhost\Service\AllowUnencrypted -Value $true
        Restart-Service WinRM
        New-NetFirewallRule -DisplayName "Allow ICMPv4-In" -Protocol ICMPv4 -IcmpType 8 -Direction Inbound -Action Allow
        New-NetFirewallRule -DisplayName "Allow WinRM" -Direction Inbound -Protocol TCP -LocalPort 5985 -Action Allow

    - name: Save IP as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-ip
        path: windows_ip.txt

  run-linux:
    runs-on: ubuntu-latest
    needs: configure-windows
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure Static IP on Linux
      id: set-ip
      run: |
        sudo ip addr add 192.168.12.101/24 dev eth0
        sudo ip route add default via 192.168.12.1
        echo "192.168.11.101" > linux_ip.txt
        echo "::set-output name=ip::192.168.12.101"

    - name: Install Ansible and Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible
        python3 -m pip install --upgrade pip
        python3 -m pip install pywinrm requests

    - name: Download Windows IP Artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-ip
        path: ./  # Download the artifact to the current directory

    - name: Read Windows IP
      id: read-ip
      run: |
        WINDOWS_IP=$(cat windows_ip.txt)
        echo "Windows IP: $WINDOWS_IP"
        echo "::set-output name=ip::$WINDOWS_IP"

    - name: Ping Windows Machine
      run: |
        echo "Pinging Windows machine..."
        ping -c 4 $(cat windows_ip.txt)
        echo "Ping completed successfully."

    - name: Test Ansible WinRM Connection
      run: |
        ansible -i Ansible/inventory.ini -m win_ping windows

    - name: Run Ansible Playbook
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"
      run: |
        ansible-playbook -i Ansible/inventory.ini Ansible/PlaybookWindows.yaml
